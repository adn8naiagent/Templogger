name: Apply Database Migration After Merge
on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  migrate:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Generate and Apply Migration
        id: migration
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "Setting up..."
          
          # Extract project ref from the prod URL
          PROD_REF=$(echo "${{ secrets.SUPABASE_PROD_DB_URL }}" | grep -oE 'db\.([a-z]+)\.supabase' | cut -d. -f2)
          
          # Initialize and link to dev
          supabase init
          supabase link --project-ref ${{ secrets.SUPABASE_DEV_PROJECT_REF }}
          
          # Pull dev schema
          supabase db pull --schema public
          
          # Generate migration by diffing against prod URL
          supabase db diff \
            --db-url "${{ secrets.SUPABASE_PROD_DB_URL }}" \
            --file migration.sql
          
          # Check if there are changes
          if [ -s migration.sql ]; then
            echo "Migration preview:"
            cat migration.sql
            
            # Safety check
            if grep -iE "(DROP TABLE|DROP COLUMN|DELETE FROM|TRUNCATE|ALTER COLUMN.*TYPE)" migration.sql; then
              echo "::error::DESTRUCTIVE OPERATIONS DETECTED!"
              exit 1
            fi
            
            # Apply migration using psql
            echo "Applying migration..."
            PGPASSWORD=$(echo "${{ secrets.SUPABASE_PROD_DB_URL }}" | grep -oP '://[^:]+:\K[^@]+')
            psql "${{ secrets.SUPABASE_PROD_DB_URL }}" -f migration.sql
            
            echo "Migration completed"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Save Artifact
        if: steps.migration.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: migration-${{ github.sha }}
          path: migration.sql
