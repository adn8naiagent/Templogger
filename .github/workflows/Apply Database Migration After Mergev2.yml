name: Apply Database Migration After Merge
on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  migrate:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Generate and Apply Migration
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "üîÑ Generating migration between dev and production..."
          
          # Extract password from the DEV database URL for linking
          # Format: postgresql://postgres:PASSWORD@db.ref.supabase.co:5432/postgres
          DEV_PASSWORD=$(echo "${{ secrets.SUPABASE_DEV_DB_URL }}" | sed -n 's/.*postgres:\([^@]*\)@.*/\1/p')
          
          # Clean workspace
          rm -rf supabase
          mkdir -p supabase
          
          # Initialize Supabase (answering N to both prompts)
          echo -e "N\nN" | supabase init
          
          # Link to dev project with password
          echo "$DEV_PASSWORD" | supabase link --project-ref ${{ secrets.SUPABASE_DEV_PROJECT_REF }}
          
          # Generate diff between dev (linked) and prod (via URL)
          supabase db diff \
            --linked \
            --db-url "${{ secrets.SUPABASE_PROD_DB_URL }}" \
            > supabase/migration.sql
          
          # Check if migration file has actual SQL commands
          if [ ! -s supabase/migration.sql ] || ! grep -qE '(CREATE|ALTER|DROP|INSERT|UPDATE|DELETE)' supabase/migration.sql; then
            echo "‚úÖ No database changes detected between dev and production"
            exit 0
          fi
          
          echo "üìã Migration changes detected:"
          echo "================================"
          cat supabase/migration.sql
          echo "================================"
          
          # Safety check for destructive operations
          DANGEROUS_PATTERNS="DROP TABLE|DROP COLUMN|DROP INDEX|DROP VIEW|DROP FUNCTION|DROP SCHEMA|DELETE FROM|TRUNCATE|ALTER COLUMN.*TYPE"
          
          if grep -iE "($DANGEROUS_PATTERNS)" supabase/migration.sql; then
            echo "::error::‚ùå DESTRUCTIVE OPERATIONS DETECTED!"
            echo ""
            echo "Found the following dangerous operations:"
            grep -iE "($DANGEROUS_PATTERNS)" supabase/migration.sql
            echo ""
            echo "::error::Manual intervention required. Please handle these changes safely:"
            echo "::error::1. For renames: Create new, migrate data, then remove old after code update"
            echo "::error::2. For type changes: Create new column, migrate data, update code, then remove old"
            echo "::error::3. For deletions: Ensure no dependencies exist and data is backed up"
            
            # Save migration for manual review
            mkdir -p artifacts
            cp supabase/migration.sql artifacts/blocked_migration_$(date +%Y%m%d_%H%M%S).sql
            exit 1
          fi
          
          echo "‚úÖ Safety check passed - no destructive operations found"
          
          # Apply migration to production
          echo "üöÄ Applying migration to production..."
          
          # Apply using psql directly
          psql "${{ secrets.SUPABASE_PROD_DB_URL }}" < supabase/migration.sql
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Migration successfully applied to production!"
            
            # Save successful migration
            mkdir -p artifacts
            cp supabase/migration.sql artifacts/applied_migration_$(date +%Y%m%d_%H%M%S).sql
          else
            echo "::error::‚ùå Migration failed to apply"
            exit 1
          fi
      
      - name: Upload Migration Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: migration-${{ github.run_number }}-${{ github.run_attempt }}
          path: |
            supabase/migration.sql
            artifacts/*.sql
          retention-days: 30
          if-no-files-found: ignore
