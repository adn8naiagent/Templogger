name: Apply Database Migration After Merge
on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  migrate:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip postgresql-client libpq-dev
          pip3 install psycopg2-binary migra
      
      - name: Generate and Apply Migration
        run: |
          echo "üîÑ Generating migration between dev and production..."
          
          # Use migra to compare databases directly
          # This compares PROD (target) to DEV (source) to find what needs to be added to PROD
          migra \
            --unsafe \
            "${{ secrets.SUPABASE_PROD_DB_URL }}" \
            "${{ secrets.SUPABASE_DEV_DB_URL }}" \
            > migration.sql 2>&1 || true
          
          # Check if migration file has real SQL content (not just errors or empty)
          if [ ! -s migration.sql ] || ! grep -qE '(CREATE|ALTER|DROP|INSERT|UPDATE|DELETE)' migration.sql; then
            echo "‚úÖ No database changes detected between dev and production"
            cat migration.sql  # Show any output for debugging
            exit 0
          fi
          
          echo "üìã Migration changes detected:"
          echo "================================"
          cat migration.sql
          echo "================================"
          
          # Safety check for destructive operations
          DANGEROUS_PATTERNS="DROP TABLE|DROP COLUMN|DROP INDEX|DROP VIEW|DROP FUNCTION|DROP SCHEMA|DELETE FROM|TRUNCATE|ALTER COLUMN.*TYPE"
          
          if grep -iE "($DANGEROUS_PATTERNS)" migration.sql; then
            echo "‚ùå DESTRUCTIVE OPERATIONS DETECTED!"
            echo ""
            echo "Found the following dangerous operations:"
            grep -iE "($DANGEROUS_PATTERNS)" migration.sql
            echo ""
            echo "Manual intervention required. Please handle these changes safely:"
            echo "1. For renames: Create new, migrate data, then remove old after code update"
            echo "2. For type changes: Create new column, migrate data, update code, then remove old"
            echo "3. For deleti
